// Generated by view binder compiler. Do not edit!
package com.creativity.dev.formsimple.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.creativity.dev.formsimple.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySelectBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnFinishSelect;

  @NonNull
  public final ConstraintLayout contentList;

  @NonNull
  public final EmptyViewBinding include;

  @NonNull
  public final RecyclerView rvSelected;

  @NonNull
  public final TextView titleSelect;

  @NonNull
  public final Toolbar toolbar2;

  private ActivitySelectBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnFinishSelect,
      @NonNull ConstraintLayout contentList, @NonNull EmptyViewBinding include,
      @NonNull RecyclerView rvSelected, @NonNull TextView titleSelect, @NonNull Toolbar toolbar2) {
    this.rootView = rootView;
    this.btnFinishSelect = btnFinishSelect;
    this.contentList = contentList;
    this.include = include;
    this.rvSelected = rvSelected;
    this.titleSelect = titleSelect;
    this.toolbar2 = toolbar2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySelectBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySelectBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_select, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySelectBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_finish_select;
      Button btnFinishSelect = ViewBindings.findChildViewById(rootView, id);
      if (btnFinishSelect == null) {
        break missingId;
      }

      ConstraintLayout contentList = (ConstraintLayout) rootView;

      id = R.id.include;
      View include = ViewBindings.findChildViewById(rootView, id);
      if (include == null) {
        break missingId;
      }
      EmptyViewBinding binding_include = EmptyViewBinding.bind(include);

      id = R.id.rv_selected;
      RecyclerView rvSelected = ViewBindings.findChildViewById(rootView, id);
      if (rvSelected == null) {
        break missingId;
      }

      id = R.id.title_select;
      TextView titleSelect = ViewBindings.findChildViewById(rootView, id);
      if (titleSelect == null) {
        break missingId;
      }

      id = R.id.toolbar_2;
      Toolbar toolbar2 = ViewBindings.findChildViewById(rootView, id);
      if (toolbar2 == null) {
        break missingId;
      }

      return new ActivitySelectBinding((ConstraintLayout) rootView, btnFinishSelect, contentList,
          binding_include, rvSelected, titleSelect, toolbar2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
