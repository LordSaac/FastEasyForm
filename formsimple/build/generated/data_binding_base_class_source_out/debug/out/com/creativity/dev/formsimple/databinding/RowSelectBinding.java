// Generated by view binder compiler. Do not edit!
package com.creativity.dev.formsimple.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.creativity.dev.formsimple.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RowSelectBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView cardSelected;

  @NonNull
  public final ImageView icon;

  @NonNull
  public final ImageView imgCheck;

  @NonNull
  public final LinearLayout lnyContent;

  @NonNull
  public final ConstraintLayout mainContentSelect;

  @NonNull
  public final TextView tvTitle;

  private RowSelectBinding(@NonNull ConstraintLayout rootView, @NonNull CardView cardSelected,
      @NonNull ImageView icon, @NonNull ImageView imgCheck, @NonNull LinearLayout lnyContent,
      @NonNull ConstraintLayout mainContentSelect, @NonNull TextView tvTitle) {
    this.rootView = rootView;
    this.cardSelected = cardSelected;
    this.icon = icon;
    this.imgCheck = imgCheck;
    this.lnyContent = lnyContent;
    this.mainContentSelect = mainContentSelect;
    this.tvTitle = tvTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RowSelectBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowSelectBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.row_select, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowSelectBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.card_selected;
      CardView cardSelected = ViewBindings.findChildViewById(rootView, id);
      if (cardSelected == null) {
        break missingId;
      }

      id = R.id.icon;
      ImageView icon = ViewBindings.findChildViewById(rootView, id);
      if (icon == null) {
        break missingId;
      }

      id = R.id.img_check;
      ImageView imgCheck = ViewBindings.findChildViewById(rootView, id);
      if (imgCheck == null) {
        break missingId;
      }

      id = R.id.lny_content;
      LinearLayout lnyContent = ViewBindings.findChildViewById(rootView, id);
      if (lnyContent == null) {
        break missingId;
      }

      ConstraintLayout mainContentSelect = (ConstraintLayout) rootView;

      id = R.id.tv_title;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      return new RowSelectBinding((ConstraintLayout) rootView, cardSelected, icon, imgCheck,
          lnyContent, mainContentSelect, tvTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
